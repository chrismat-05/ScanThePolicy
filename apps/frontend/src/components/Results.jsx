import { Lock, Share2, Scale } from "lucide-react";
import RiskBadge from "./RiskBadge";
import ResultCard from "./ResultCard";
import { Button } from "@/components/ui/button";
import { Copy, RotateCcw } from "lucide-react";


const Results = ({ data, onReset }) => {
  const handleCopyResults = () => {
    const summary = `
Privacy Policy Analysis Results:

Risk Score: ${data.risk_score}/10

🔒 Data Collected:
${data.summaries.data_collected.map(item => `• ${item}`).join('\n')}

🔗 Data Sharing:
${data.summaries.data_sharing.map(item => `• ${item}`).join('\n')}

⚖️ User Rights:
${data.summaries.user_rights.map(item => `• ${item}`).join('\n')}

Generated by ScanThePolicy - Privacy Policy Analyzer
    `.trim();

    navigator.clipboard.writeText(summary);
  };

  return (
    <section className="min-h-screen py-24 px-6">
      <div className="container mx-auto max-w-6xl">
        <div className="text-center mb-12 animate-fade-in">
          <h2 className="text-3xl md:text-4xl font-bold mb-4 text-foreground">
            Analysis Complete
          </h2>
          <p className="text-lg text-muted-foreground">
            Here's what we found in this privacy policy
          </p>
        </div>

        {/* Risk Score */}
        <div className="flex justify-center mb-12 animate-slide-up">
          <RiskBadge score={data.risk_score} />
        </div>

        {/* Results Grid */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
          <ResultCard
            title="Data Collected"
            icon={Lock}
            items={data.summaries.data_collected}
            className="animate-slide-up"
          />
          <ResultCard
            title="Data Sharing"
            icon={Share2}
            items={data.summaries.data_sharing}
            className="animate-slide-up"
          />
          <ResultCard
            title="User Rights"
            icon={Scale}
            items={data.summaries.user_rights}
            className="animate-slide-up"
          />
        </div>

        {/* Action Buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center animate-fade-in">
          <Button
            onClick={handleCopyResults}
            variant="outline"
            className="flex items-center space-x-2 px-6 py-3 rounded-xl border-card-border hover:bg-muted/50"
          >
            <Copy className="h-4 w-4" />
            <span>Copy Summary</span>
          </Button>
          
          <Button
            onClick={onReset}
            className="btn-hero px-6 py-3 rounded-xl border-0"
          >
            <RotateCcw className="h-4 w-4 mr-2" />
            Analyze Another Policy
          </Button>
        </div>
      </div>
    </section>
  );
};

export default Results;